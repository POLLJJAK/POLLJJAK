<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.mybatis.IInnerProjectTeamManageDAO">
	
	<select id="pj_title_info" resultType="com.test.dto.InnerProjectTeamManageDTO">
		SELECT
		P3.P_NAME AS P_NAME
		, P3.PJ_START_DATE AS PJ_START_DATE
		, P3.PJ_END_DATE AS PJ_END_DATE,
	    ROUND(NVL(
   	    (
	       SELECT COUNT(*)
	 	   FROM U_P_APPLY I1, PH_MAINWORK I2, PH_SUBWORK I3
		   WHERE I1.U_P_APPLY_CODE = #{u_p_apply_code}
		     AND I1.U_P_APPLY_CODE = I2.U_P_APPLY_CODE
		     AND I2.PH_MAINWORK_CODE = I3.PH_MAINWORK_CODE
	    )
	    /
	    DECODE(
	    (
		   SELECT COUNT(*)
		   FROM U_P_APPLY I1, PH_MAINWORK I2, PH_SUBWORK I3, PH_SUBWORK_COMPLETE I4
		   WHERE I1.U_P_APPLY_CODE =#{u_p_apply_code}
		     AND I1.U_P_APPLY_CODE = I2.U_P_APPLY_CODE
		     AND I2.PH_MAINWORK_CODE = I3.PH_MAINWORK_CODE
		     AND I3.PH_SUBWORK_CODE = I4.PH_SUBWORK_CODE
	    )
	    ,0
	    , NULL
	    , (
		   SELECT COUNT(*)
		   FROM U_P_APPLY I1, PH_MAINWORK I2, PH_SUBWORK I3, PH_SUBWORK_COMPLETE I4
		   WHERE I1.U_P_APPLY_CODE =#{u_p_apply_code}
		     AND I1.U_P_APPLY_CODE = I2.U_P_APPLY_CODE
		     AND I2.PH_MAINWORK_CODE = I3.PH_MAINWORK_CODE
		     AND I3.PH_SUBWORK_CODE = I4.PH_SUBWORK_CODE
	    )), 0)*100, 0)
	    AS ALL_PERCENT
	    FROM U_P_APPLY P1, P_POSITION P2, P P3
        WHERE P1.U_P_APPLY_CODE = #{u_p_apply_code}
		  AND P1.P_POSITION_CODE = P2.P_POSITION_CODE
		  AND P2.P_CODE = P3.P_CODE
	</select>
	
	<select id="pj_team_info" resultType="com.test.dto.InnerProjectTeamManageDTO">
		SELECT 
			CASE WHEN (
				SELECT U_P_APPLY_CODE
				FROM P_LEADER
				WHERE P_LEADER_DATE = (
					SELECT MAX(A2.P_LEADER_DATE)
					FROM U_P_APPLY A1, P_LEADER A2
					WHERE USER_CODE IN (
						SELECT P3.USER_CODE
						FROM P P1, P_POSITION P2, U_P_APPLY P3, P_REJECT P4
						WHERE P1.P_CODE = (
							SELECT T3.P_CODE
							FROM U_P_APPLY T1, P_POSITION T2, P T3
							WHERE T1.U_P_APPLY_CODE = #{u_p_apply_code}
							  AND T1.P_POSITION_CODE = T2.P_POSITION_CODE
							  AND T2.P_CODE = T3.P_CODE
						)  
						  AND P1.P_CODE = P2.P_CODE
						  AND P2.P_POSITION_CODE = P3.P_POSITION_CODE
						  AND NOT P3.U_P_APPLY_CODE = P4.U_P_APPLY_CODE
					)
					AND A1.U_P_APPLY_CODE = A2.U_P_APPLY_CODE
				)
			) = B1.U_P_APPLY_CODE THEN '팀장' ELSE '팀원' END AS TEAM_ROLE
			, B3.POSITION_PART AS POSITION_PART
			, B4.U_NAME AS U_NAME
			, NVL(B6.CONTRIBUTE, 0) AS CONTRIBUTE
			, B5.LAST_LOGIN_DATE AS LAST_LOGIN_DATE
			FROM (
				SELECT A1.U_P_APPLY_CODE, A1.P_POSITION_CODE, A1.USER_CODE, A1.U_P_APPLY_REASON
				FROM U_P_APPLY A1
				WHERE USER_CODE IN (
					SELECT P3.USER_CODE
					FROM P P1, P_POSITION P2, U_P_APPLY P3, P_REJECT P4
					WHERE P1.P_CODE = (
						SELECT T3.P_CODE
						FROM U_P_APPLY T1, P_POSITION T2, P T3
						WHERE T1.U_P_APPLY_CODE = #{u_p_apply_code}
						  AND T1.P_POSITION_CODE = T2.P_POSITION_CODE
						  AND T2.P_CODE = T3.P_CODE
					)  
					  AND P1.P_CODE = P2.P_CODE
					  AND P2.P_POSITION_CODE = P3.P_POSITION_CODE
					  AND NOT P3.U_P_APPLY_CODE = P4.U_P_APPLY_CODE
				)
			) B1, P_POSITION B2, POSITION_PART B3, U B4,
			(
				SELECT USER_CODE, TO_CHAR(MAX(USER_LOGIN_LOG_DATE), 'YYYY-MM-DD') AS LAST_LOGIN_DATE
				FROM USER_LOGIN_LOG
				GROUP BY USER_CODE 
				HAVING USER_CODE IN
					(
					SELECT P3.USER_CODE
					FROM P P1, P_POSITION P2, U_P_APPLY P3, P_REJECT P4
					WHERE P1.P_CODE = (
						SELECT T3.P_CODE
						FROM U_P_APPLY T1, P_POSITION T2, P T3
						WHERE T1.U_P_APPLY_CODE = #{u_p_apply_code}
						  AND T1.P_POSITION_CODE = T2.P_POSITION_CODE
						  AND T2.P_CODE = T3.P_CODE
					)  
					  AND P1.P_CODE = P2.P_CODE
					  AND P2.P_POSITION_CODE = P3.P_POSITION_CODE
					  AND NOT P3.U_P_APPLY_CODE = P4.U_P_APPLY_CODE )
			) B5,
			(
				SELECT U_P_APPLY_CODE, ROUND(ALL_COUNT /
				(
					SELECT COUNT(*)
					FROM PH_SUBWORK
					WHERE U_P_APPLY_CODE IN (
						SELECT P3.U_P_APPLY_CODE
						FROM P P1, P_POSITION P2, U_P_APPLY P3, P_REJECT P4
						WHERE P1.P_CODE = (
							SELECT T3.P_CODE
							FROM U_P_APPLY T1, P_POSITION T2, P T3
							WHERE T1.U_P_APPLY_CODE = #{u_p_apply_code}
							  AND T1.P_POSITION_CODE = T2.P_POSITION_CODE
							  AND T2.P_CODE = T3.P_CODE
						)  
						  AND P1.P_CODE = P2.P_CODE
						  AND P2.P_POSITION_CODE = P3.P_POSITION_CODE
						  AND NOT P3.U_P_APPLY_CODE = P4.U_P_APPLY_CODE
					)
				)*100, 0) AS CONTRIBUTE
				FROM
				(
					SELECT U_P_APPLY_CODE, COUNT(*) AS ALL_COUNT
					FROM PH_SUBWORK
					GROUP BY U_P_APPLY_CODE
					HAVING U_P_APPLY_CODE IN
					(
						SELECT P3.U_P_APPLY_CODE
						FROM P P1, P_POSITION P2, U_P_APPLY P3, P_REJECT P4
						WHERE P1.P_CODE = (
							SELECT T3.P_CODE
							FROM U_P_APPLY T1, P_POSITION T2, P T3
							WHERE T1.U_P_APPLY_CODE = #{u_p_apply_code}
							  AND T1.P_POSITION_CODE = T2.P_POSITION_CODE
							  AND T2.P_CODE = T3.P_CODE
						)  
						  AND P1.P_CODE = P2.P_CODE
						  AND P2.P_POSITION_CODE = P3.P_POSITION_CODE
						  AND NOT P3.U_P_APPLY_CODE = P4.U_P_APPLY_CODE
					)
				)
			) B6
			WHERE B1.P_POSITION_CODE = B2.P_POSITION_CODE
			  AND B2.POSITION_PART_CODE = B3.POSITION_PART_CODE
			  AND B1.USER_CODE = B4.USER_CODE
			  AND B4.USER_CODE = B5.USER_CODE
			  AND B1.U_P_APPLY_CODE = B6.U_P_APPLY_CODE(+)
	</select>


	<select id="pj_team_count" resultType="java.lang.Integer">
		SELECT COUNT(*) AS TEAM_MEMBER_COUNT
		FROM P P1, P_POSITION P2, U_P_APPLY P3
		WHERE P1.P_CODE = (
			SELECT T3.P_CODE
			FROM U_P_APPLY T1, P_POSITION T2, P T3
			WHERE T1.U_P_APPLY_CODE = #{u_p_apply_code}
			  AND T1.P_POSITION_CODE = T2.P_POSITION_CODE
			  AND T2.P_CODE = T3.P_CODE
		)
		  AND P1.P_CODE = P2.P_CODE
		  AND P2.P_POSITION_CODE = P3.P_POSITION_CODE
	</select>
	
	
</mapper>